import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Rectangle2D;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonBar;
import javafx.scene.control.TextField;
import javafx.stage.Screen;
import javafx.stage.Stage;

import java.io.IOException;
import java.rmi.Naming;
import java.rmi.NotBoundException;

public class StartGameController implements LogInterface {
    @FXML
    private Button joinButton;
    @FXML
    private TextField serverAddress;
    private GameController gameController;
    private PlayerRole player;

    public void setPlayer(PlayerRole player) {
        this.player = player;
    }

    @FXML
    private void joinGame(ActionEvent actionEvent) throws IOException, NotBoundException {
        String address = serverAddress.getText();
        if (address.equals("")) {
            address = "127.0.0.1";
        }
        ServerInterface remoteServer;
        /** when player is primary server getRole() will PrimaryServer**/
        if (player.getRole() != null && player.getRole().equals(Super.primaryServer)) {
            remoteServer = player.getServerRole();
        } else {
            remoteServer = (ServerInterface) Naming.lookup("rmi://" + address + ":9090/server");
        }
        ExchangeData exchangeData = remoteServer.joinGame(player);
        log(player + "");
        if (exchangeData != null) {
            showGameUI((Stage) joinButton.getScene().getWindow(), exchangeData);
        } else {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Error!");
            alert.setHeaderText("You can't join the game");
            alert.setContentText("The Game Has Started!!");
            ((Button) (((ButtonBar) (alert.getDialogPane().getChildren().get(2))).getButtons().get(0))).setText("Noted");
            alert.showAndWait();
        }
    }

    public void showGameUI(Stage stage, ExchangeData exchangeData) throws IOException {
        GameInfo gameInfo = exchangeData.getGameInfo();
        log("received game information from primary server" + gameInfo + "");
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("game_layout.fxml"));
        Parent root = fxmlLoader.load();
        gameController = fxmlLoader.getController();
        gameController.initializeMazeUI(player, joinButton.getScene(), exchangeData);
        stage.setWidth(gameInfo.getMazeSize() * 50 + 150);
        stage.setHeight(gameInfo.getMazeSize() * 50 + 22);
        stage.setScene(new Scene(root));
        stage.setTitle("MAZE GAME: " + player.getPlayerIDAsString() + " : " + player.getRole());
        Rectangle2D rectangle2D = Screen.getPrimary().getVisualBounds();
        stage.setX((rectangle2D.getWidth() - stage.getWidth()) / 2);
        stage.setY((rectangle2D.getHeight() - stage.getHeight()) / 2);
        stage.show();
    }

    public void drawRival(ExchangeData exchangeData) {
        gameController.drawPlayer(exchangeData.getGameInfo(), exchangeData.getPlayerInfo(), "RIVAL");
    }

    public void startMazeGame() {
        gameController.startMazeGame();
    }

    public void terminateGame() {
        Platform.runLater(gameController::terminateGame);
    }

}
